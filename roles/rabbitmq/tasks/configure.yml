---
- name: copy configs
  template: >
    dest="/etc/rabbitmq/{{ item }}"
    force=yes
    group=root
    mode="0644"
    owner=root
    src="{{ rabbitmq_files_path }}{{ item }}"
  notify: restart rabbitmq
  with_items: "{{ rabbitmq_configs }}"

- name: check if vhosts are created
  shell: >
    /usr/sbin/rabbitmqctl list_vhosts -q | /bin/grep "^{{ item.name }}" || /bin/true
  changed_when: false
  register: _vhosts
  with_items: "{{ rabbitmq_vhosts }}"

- name: create vhosts
  command: >
    /usr/sbin/rabbitmqctl add_vhost {{ item.item.name }}
  when: _vhosts.results is defined and item.stdout == ""
  with_items: "{{ _vhosts.results }}"

- name: check if users are created
  shell: >
    /usr/sbin/rabbitmqctl list_users -q | /bin/grep "^{{ item.1.name }}" || /bin/true
  changed_when: false
  register: _users
  with_subelements:
    - "{{ rabbitmq_vhosts }}"
    - users

- name: create users
  command: >
    /usr/sbin/rabbitmqctl add_user {{ item.item.1.name }} {{ item.item.1.password }}
  notify: restart rabbitmq
  when: _users.results is defined and item.stdout == ""
  with_items: "{{ _users.results }}"

- name: create tag
  command: >
    /usr/sbin/rabbitmqctl set_user_tags {{ item.item.1.name }} {{ item.item.1.tag }}
  notify: restart rabbitmq
  when: _users.results is defined and item.stdout == ""
  with_items: "{{ _users.results }}"

- name: create privileges
  command: >
    /usr/sbin/rabbitmqctl set_permissions -p {{ item.item.0.name }} {{ item.item.1.name }} {{ item.item.1.priv }}
  notify: restart rabbitmq
  when: _users.results is defined and item.stdout == ""
  with_items: "{{ _users.results }}"

- name: install bash completion
  shell: >
    {{ rabbitmq_rabbitmqadmin_path }} --bash-completion > /etc/bash_completion.d/rabbitmqadmin
    creates=/etc/bash_completion.d/rabbitmqadmin
